/***************************************АСИНХРОННОЕ ПРОГРАММИРОВАНИЕ**********************************************/


САЙТ: https://docs.microsoft.com/ru-ru/dotnet/csharp/programming-guide/concepts/async/
МОЁ МНЕНИЕ:
ПРЕДСТАВИМ УТРЕННИЙ ЗАВТРАК:

* Налить чашку кофе.
* Нагреть сковородку, а затем поджарить два яйца.
* Поджарить три куска бекона.
* Сделать два тоста.
* Намазать тосты маслом и джемом.
* Налить стакан апельсинового сока.

КОНЕЧНО МЫ МОЖЕМ ВЫПОЛНИТЬ ВСЕ ЭТИ ДЕЙСТВИЯ ПОСЛЕДОВАТЕЛЬНО, НО ЭТО МОЖЕТ ЗАНЯТЬ МНОГО ВРЕМЕНИ.
ПО ЭТОМУ ВЫПОЛНИТЬ ЭТИ ДЕЙСТВИЯ МОЖНО АСИНХРОННО.
ПОСТАВИТЬ СКОВОРОДКУ НА ОГОНЬ, ЗАНЯТСЯ КОФЕ, СДЕЛАТЬ ДВА ТОСТА, НАЛИТЬ СОК,
И ЗА ЭТО ВРЕМЯ СКАВАРОДКА УЖЕ НАГРЕЕТСЯ,
И МЫ УЖЕ СМОЖЕМ ПРИГОТОВИТЬ СВОЙ ЗАВТРАК.

НО ЧТО БУДЕТ ЕСЛИ ЭТО БУДЕТ ВЫПОЛНЯТЬ ПК?
ОН ВЫПОЛНИТ ВСЕ ЭТИ ДЕЙСТВИЯ ЛИНЕЙНЫМ АЛГОРИТМОМ Т. Е. ПОСЛЕДОВАТЕЛЬНО.
НО БЛАГО ЕСТЬ АСИНХРОННОЕ ПРОГРАММИРОВАНИЕ КОТОРОЕ ПОЗВОЛИТ ПК ВЫПОЛЯНТЬ ВСЕ ЭТИ ДЕЙСТВИЯ АСИНХРОНО.

ОН ВКЛЮЧИТ ВСЕ ЭТИ ДЕЙСТВИЯ, И ЭТИ ДЕЙСТВИЯ МОГУТ ВЫПОЛНЯТСЯ АСИНХРОНО, ОНИ НЕ БУДУТ ЖДАТЬ ОКОНЧАНИЯ ДРУГ ДРУГА,
ЧТО ПОЗВОЛИТ ТАК ЖЕ ПК НЕ ЗАМОРАЖИВАТЬСЯ ПОКА ЭТИ ДЕЙСТВИЯ БУДУТ ВЫПОЛНЯТСЯ.

ВОТ ЭТО И ЕСТЬ ГЛАВНЫМ ПЛЮСОМ АСИНХРОННОГО ПРОГРАММИРОВАНИЯ,
НЕКИЕ ДЕЙСТВИЯ БУДУТ ВЫПОЛНЯТСЯ,
НО ПРИ ЭТОМ ГЛАВНОЕ ПРИЛОЕНИЕ НЕ БУДЕТ ЗАНЯТА И ЗАМАРАЖИВАТЬСЯ.


В НАШЕ ВРЕМЯ ВСЕ СОВРЕМЕННЫЕ ПРИЛОЖЕНИЯ ИСПОЛЬЗУЮТ АСИНХРОННОЕ ПРОГРАММИРОВАНИЕ,
ВЕДЬ БЛАГОДАРЯ ЕМУ ПОТОКИ ВЕБ-СЕРВИСОВ НЕ БУДУТ ЗАМОРАЖИВАТЬСЯ,
А САМИ ПРИЛОЖЕНИЯ НЕ БУДУТ ЗАМОРАЖИВАТЬСЯ ПРИ ВЫПОЛНЕНИЯ РАЗЛИЧНЫХ БОЛЬШИХ ЗАПРОСОВ.

ПЛЮСЫ:
* НЕ БЛОКИРОВАТЬ ПРИЛОЖЕНИЯ!
* ВЫПОЛНЕНИЕ СРАЗУ НЕСКОЛЬКИЗ ЗАДАЧ!
* СОЧЕТАЕМОСТЬ ЗАДАЧ!
* ЭФФЕКТИВНОЕ ОЖИДАНИЕ ЗАДАЧ!


/***************************************АСИНХРОННОЕ ПРОГРАММИРОВАНИЕ**********************************************/